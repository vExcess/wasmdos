class DisplayAdapter {
    // https://wiki.osdev.org/Text_UI

    // \x00☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂
    static CHARS = "0,9786,9787,9829,9830,9827,9824,8226,9688,9675,9689,9794,9792,9834,9835,9788,9658,9668,8597,8252,182,167,9644,8616,8593,8595,8594,8592,8735,8596,9650,9660,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,8962".split(",").map(s => String.fromCharCode(+s));
    
    static CHAR_ART = [
        [0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,126,129,165,129,129,189,153,129,129,126,0,0],
        [0,126,255,219,255,255,195,231,255,255,126,0,0],
        [0,0,108,254,254,254,254,124,56,16,0,0,0],
        [0,0,0,16,56,124,254,124,56,16,0,0,0],
        [0,0,24,60,60,231,231,231,24,24,60,0,0],
        [0,0,24,60,126,255,255,126,24,24,60,0,0],
        [0,0,0,0,24,60,60,24,0,0,0,0,0],
        [255,255,255,255,231,195,195,231,255,255,255,255,255],
        [0,0,0,60,102,66,66,102,60,0,0,0,0],
        [255,255,255,195,153,189,189,153,195,255,255,255,255],
        [0,30,14,26,50,120,204,204,204,204,120,0,0],
        [0,60,102,102,102,102,60,24,126,24,24,0,0],
        [0,0,63,51,63,48,48,48,112,240,224,0,0],
        [0,127,99,127,99,99,99,99,103,231,230,192,0],
        [0,0,24,24,219,60,231,60,219,24,24,0,0],
        [0,128,192,224,240,248,254,248,240,224,192,128,0],
        [0,1,3,7,15,31,127,31,15,7,3,1,0],
        [0,0,24,60,126,24,24,24,126,60,24,0,0],
        [0,102,102,102,102,102,102,102,0,102,102,0,0],
        [0,127,219,219,219,123,27,27,27,27,27,0,0],
        [124,198,96,56,108,198,198,124,56,12,198,252,0],
        [0,0,0,0,254,254,254,254,0,0,0,0,0],
        [0,24,60,126,24,24,24,126,60,24,126,0,0],
        [0,24,60,126,24,24,24,24,24,24,24,0,0],
        [0,0,24,24,24,24,24,24,24,126,60,24,0],
        [0,0,0,0,24,12,254,12,24,0,0,0,0],
        [0,0,0,0,24,48,127,48,24,0,0,0,0],
        [0,0,0,0,192,192,192,254,0,0,0,0,0],
        [0,0,0,0,36,102,255,102,36,0,0,0,0],
        [0,0,0,16,56,56,124,124,254,254,0,0,0],
        [0,0,0,254,254,124,124,56,56,16,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,24,60,60,60,24,24,24,0,24,24,0,0],
        [102,102,102,36,0,0,0,0,0,0,0,0,0],
        [0,0,0,108,108,254,108,108,254,108,108,0,0],
        [24,24,124,198,194,192,124,6,134,198,124,24,24],
        [0,0,0,0,98,102,12,24,48,102,70,0,0],
        [0,0,56,108,108,56,118,220,204,204,118,0,0],
        [24,24,24,48,0,0,0,0,0,0,0,0,0],
        [0,12,24,48,48,48,48,48,48,48,24,12,0],
        [0,48,24,12,12,12,12,12,12,12,24,48,0],
        [0,0,0,0,102,60,255,60,102,0,0,0,0],
        [0,0,0,0,24,24,126,24,24,0,0,0,0],
        [0,0,0,0,0,0,0,0,24,24,24,48,0],
        [0,0,0,0,0,0,254,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,24,24,0],
        [0,0,0,2,6,12,24,48,96,192,128,0,0],
        [0,60,102,195,195,219,219,195,195,102,60,0,0],
        [8,24,56,120,24,24,24,24,24,24,126,0,0],
        [0,124,198,6,12,24,48,96,192,198,254,0,0],
        [0,0,124,198,6,6,60,6,6,198,124,0,0],
        [0,12,28,60,108,204,254,12,12,12,30,0,0],
        [254,192,192,192,192,252,6,6,6,198,124,0,0],
        [0,56,96,192,192,252,198,198,198,198,124,0,0],
        [0,126,102,6,6,12,24,48,48,48,48,0,0],
        [0,60,102,102,102,60,102,102,102,102,60,0,0],
        [0,124,198,198,198,126,6,6,6,12,120,0,0],
        [0,0,0,24,24,0,0,0,24,24,0,0,0],
        [0,0,0,24,24,0,0,0,24,24,112,0,0],
        [0,0,6,12,24,48,96,48,24,12,6,0,0],
        [0,0,0,0,126,0,0,126,0,0,0,0,0],
        [0,0,96,48,24,12,6,12,24,48,96,0,0],
        [0,124,198,198,12,24,24,24,0,24,24,0,0],
        [0,0,124,198,198,222,222,222,220,192,124,0,0],
        [0,16,56,108,198,198,254,198,198,198,198,0,0],
        [0,252,102,102,102,124,102,102,102,102,252,0,0],
        [0,60,102,194,192,192,192,192,194,102,60,0,0],
        [0,248,108,102,102,102,102,102,102,110,248,0,0],
        [0,254,102,96,100,124,100,96,96,102,254,0,0],
        [0,254,102,96,100,124,100,96,96,96,240,0,0],
        [0,60,102,194,192,192,222,198,198,102,58,0,0],
        [0,198,198,198,198,254,198,198,198,198,198,0,0],
        [0,126,24,24,24,24,24,24,24,24,126,0,0],
        [0,63,12,12,12,12,12,204,204,204,120,0,0],
        [0,230,102,102,108,120,120,108,102,102,230,0,0],
        [0,248,96,96,96,96,96,96,98,102,254,0,0],
        [0,195,231,255,219,195,195,195,195,195,195,0,0],
        [0,195,227,243,219,207,199,195,195,195,195,0,0],
        [0,124,198,198,198,198,198,198,198,198,124,0,0],
        [0,252,102,102,102,124,96,96,96,96,240,0,0],
        [0,124,198,198,198,198,198,198,214,222,124,12,15],
        [0,252,102,102,102,124,108,102,102,102,230,0,0],
        [0,124,198,198,96,56,12,6,198,198,124,0,0],
        [0,255,219,153,24,24,24,24,24,24,60,0,0],
        [0,198,198,198,198,198,198,198,198,198,124,0,0],
        [0,195,195,195,195,195,195,195,102,60,24,0,0],
        [0,198,198,198,198,198,214,214,254,108,108,0,0],
        [0,195,195,102,60,24,24,60,102,195,195,0,0],
        [0,195,195,195,102,60,24,24,24,24,60,0,0],
        [0,255,195,134,12,24,48,96,193,195,255,0,0],
        [0,62,48,48,48,48,48,48,48,48,62,0,0],
        [0,0,0,128,192,96,48,24,12,6,2,0,0],
        [0,124,12,12,12,12,12,12,12,12,124,0,0],
        [16,56,108,198,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,255],
        [48,48,24,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,120,12,124,204,204,204,118,0,0],
        [0,0,224,96,96,120,110,102,102,102,124,0,0],
        [0,0,0,0,124,198,192,192,192,198,124,0,0],
        [0,0,28,12,12,60,236,204,204,204,118,0,0],
        [0,0,0,0,124,198,198,254,192,192,126,0,0],
        [0,0,60,102,96,96,252,96,96,96,240,0,0],
        [0,0,0,0,118,204,204,204,124,12,204,120,0],
        [0,0,224,96,96,108,118,102,102,102,230,0,0],
        [0,0,24,24,0,56,24,24,24,24,60,0,0],
        [0,0,12,12,0,28,12,12,12,12,204,204,120],
        [0,0,224,96,102,108,120,120,108,102,230,0,0],
        [0,0,112,48,48,48,48,48,48,48,120,0,0],
        [0,0,0,0,0,230,255,219,219,219,219,0,0],
        [0,0,0,0,0,220,102,102,102,102,102,0,0],
        [0,0,0,0,0,124,198,198,198,198,124,0,0],
        [0,0,0,0,220,102,102,102,102,124,96,96,240],
        [0,0,0,0,118,204,204,204,204,124,12,12,30],
        [0,0,0,0,0,220,118,96,96,96,240,0,0],
        [0,0,0,0,124,198,96,56,12,198,124,0,0],
        [0,0,16,48,48,254,48,48,48,50,28,0,0],
        [0,0,0,0,0,204,204,204,204,204,118,0,0],
        [0,0,0,0,0,195,195,195,102,60,24,0,0],
        [0,0,0,0,0,195,195,219,219,255,102,0,0],
        [0,0,0,0,0,195,102,24,24,102,195,0,0],
        [0,0,0,0,198,198,198,198,198,126,6,12,248],
        [0,0,0,0,0,254,6,28,112,192,254,0,0],
        [0,0,14,24,24,24,240,24,24,24,14,0,0],
        [0,0,24,24,24,0,0,0,24,24,24,0,0],
        [0,0,112,24,24,24,15,24,24,24,112,0,0],
        [0,0,0,0,0,118,220,0,0,0,0,0,0],
        [0,0,0,16,56,108,198,198,198,254,0,0,0],
    ];
    
    // http://answers.google.com/answers/threadview/id/126097.html
    static COLOR_TABLE = [
        [0, 0, 0],
        [0, 0, 2],
        [0, 2, 0],
        [0, 2, 2],
        [2, 0, 0],
        [2, 0, 2],
        [2, 1, 0],
        [2, 2, 2],
        [1, 1, 1],
        [1, 1, 3],
        [1, 3, 1],
        [1, 3, 3],
        [3, 1, 1],
        [3, 1, 3],
        [3, 3, 1],
        [3, 3, 3],
    ].map(a => a.map(b => b*85));
    
    static COLORS = {
        black: 0,
        blue: 1,
        green: 2,
        cyan: 3,
        red: 4,
        magenta: 5,
        brown: 6,
        lightGray: 7,
        darkGray: 8,
        lightBlue: 9,
        lightGreen: 10,
        lightCyan: 11,
        lightRed: 12,
        lightMagenta: 13,
        yellow: 14,
        white: 15,
    };
    
    canvas;
    ctx;
    width;
    height;
    mode = -1;
    videoBuffAddr = 0;

    constructor(canvas) {
        this.canvas = canvas;
        this.ctx = canvas.getContext("2d");
    }

    setSize(width, height) {
        this.width = width;
        this.height = height;
        this.canvas.width = width;
        this.canvas.height = height;
    }

    setMode(mode) {
        this.mode = mode;
        switch (mode) {
            case 3: {
                // text mode 80x25 characters, 16 color VGA
                this.setSize(720, 400);
            }
        }
    }

    update(videoBuffer) {
        const ctx = this.ctx;
        switch (this.mode) {
            case 3: {
                for (let i = 0; i < videoBuffer.length; i += 2) {
                    let codePt = videoBuffer[i + 1];
                    let x = (i >> 1) % 80;
                    let y = ((i >> 1) / 80) | 0;

                    let foregroundClrIdx = videoBuffer[i] & 0b1111;
                    let backgroundClrIdx = (videoBuffer[i] >> 4) & 0b1111;
                    
                    let foregroundClr = DisplayAdapter.COLOR_TABLE[foregroundClrIdx];
                    let backgroundClr = DisplayAdapter.COLOR_TABLE[backgroundClrIdx];
                    
                    ctx.fillStyle = `rgb(${backgroundClr})`;
                    ctx.fillRect(x * 9, y * 16, 9, 16);
                    
                    if (codePt < DisplayAdapter.CHAR_ART.length) {
                        const charArt = DisplayAdapter.CHAR_ART[codePt];

                        ctx.fillStyle = `rgb(${foregroundClr})`;
                        for (let cy = 0; cy < charArt.length; cy++) {
                            let row = charArt[cy];
                            for (let cx = 7; cx >= 0; cx--) {
                                if (row & 1 == 1) {
                                    ctx.fillRect(x * 9 + cx, 2 + y * 16 + cy, 1, 1);
                                }
                                row = row >> 1;
                            }
                        }
                    }
                }
            }
        }
    }
}